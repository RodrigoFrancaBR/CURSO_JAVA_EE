-- MySQL Script generated by MySQL Workbench
-- Wed Jan  1 00:21:02 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema db_curso
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema db_curso
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db_curso` DEFAULT CHARACTER SET utf8 ;

USE `db_curso` ;

-- -----------------------------------------------------
-- Table `db_curso`.`TB_UNIDADE`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_curso`.`TB_UNIDADE` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(20) NOT NULL,
  `endereco` VARCHAR(60) NOT NULL COMMENT 'Endereço não pode ser repetido.',
  `status` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `nome_endereco_UK` 
  (`nome` ASC, `endereco` ASC) 
  COMMENT 'O nome da unidade pode se repetir, desde que seja para endereços diferentes ex. \nNome Cascadura end quintão\nNome Cascadura end ana quintão')
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_curso`.`TB_TURMA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_curso`.`TB_TURMA` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `unidade_id` BIGINT NOT NULL,
  `nome` VARCHAR(20) NOT NULL,
  `status` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_TB_TURMA_TB_UNIDADE_IDX` (`unidade_id` ASC),
  UNIQUE INDEX `nome_unidade_id_UK` 
  (`nome` ASC, `unidade_id` ASC) 
  COMMENT 'O nome da turma pode se repetir desde que seja para unidades diferentes\nex nome 1001 unidade_id 1\nnome 1001 unidade_id 2',
  CONSTRAINT `FK_TB_TURMA_TB_UNIDADE`
    FOREIGN KEY (`unidade_id`)
    REFERENCES `db_curso`.`TB_UNIDADE` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_curso`.`TB_ALUNO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_curso`.`TB_ALUNO` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(40) NOT NULL,
  `cpf` VARCHAR(11) NOT NULL COMMENT '11111111111',
  `rg` VARCHAR(9) NOT NULL COMMENT '999999999',
  `org_exp` VARCHAR(20) ,
  `uf_rg` VARCHAR(2) ,
  `dt_nasci` DATE ,
  `sexo` VARCHAR(20) NOT NULL,
  `celular` VARCHAR(11) NOT NULL COMMENT '21988887777',
  `residencial` VARCHAR(10) NOT NULL COMMENT '2133332222',
  `email` VARCHAR(60) ,
  `cep` VARCHAR(8) COMMENT '99999888',
  `endereco` VARCHAR(60) NOT NULL,
  `bairro` VARCHAR(30) NOT NULL,
  `cidade` VARCHAR(30) ,
  `estado` VARCHAR(2) ,
  `pai` VARCHAR(40) ,
  `mae` VARCHAR(40) ,
  `sit_aluno` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC),
  UNIQUE INDEX `rg_UNIQUE` (`rg` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_curso`.`TB_CONTRATO`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_curso`.`TB_CONTRATO` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `turma_id` BIGINT NOT NULL,
  `aluno_id` BIGINT NOT NULL,
  `tx_matri` DECIMAL(7,2) NOT NULL COMMENT 'taxa de matrícula',
  `vlr_curso` DECIMAL(7,2) NOT NULL COMMENT 'valor do curso',
  `desc_curso` DECIMAL(7,2) NOT NULL COMMENT 'desconto obtido no valor do curso',
  `vlr_mate` DECIMAL(7,2) NOT NULL,
  `forma_pg` VARCHAR(20) NOT NULL,
  `dia_venc` TINYINT NOT NULL,
  `dt_matri` DATE NOT NULL,
  `sit_matric` VARCHAR(20) NOT NULL,
  `matricula` VARCHAR(11) NOT NULL,
  INDEX `FK_TB_TURMA_ALUNO_TB_ALUNO_IDX` (`aluno_id` ASC) ,
  INDEX `FK_TB_TURMA_ALUNO_TB_TURMA_IDX` (`turma_id` ASC) ,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `turma_id_aluno_id_UK` (`aluno_id` ASC, `turma_id` ASC) COMMENT 'O aluno pode se repetir desde que seja em turmas diferentes',
  UNIQUE INDEX `matricula_UK` (`matricula` ASC) ,
  CONSTRAINT `FK_TB_TURMA_ALUNO_TB_TURMA`
    FOREIGN KEY (`turma_id`)
    REFERENCES `db_curso`.`TB_TURMA` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_TB_TURMA_TB_ALUNO_TB_ALUNO`
    FOREIGN KEY (`aluno_id`)
    REFERENCES `db_curso`.`TB_ALUNO` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `db_curso`.`TB_PARCELA`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `db_curso`.`TB_PARCELA` (
  `id` BIGINT NOT NULL AUTO_INCREMENT,
  `contrato_id` BIGINT NOT NULL,
  `dt_venc` DATE NOT NULL,
  `vlr_pg` DECIMAL(7,2) NULL COMMENT '\'VALOR PAGO NESTA DATA\'',
  `dt_pg` DATE NULL,
  `vlr_parc_curso` DECIMAL(7,2) NOT NULL COMMENT 'VALOR COM DESCONTO E PARCELADO',
  `vlr_parc_mate` DECIMAL(7,2) NOT NULL COMMENT 'VALOR PARCELADO',
  `vlr_tot_parc` DECIMAL(7,2) NOT NULL COMMENT 'PARCELA_CURSO+PARCELA_MATERIAL+TAXA_MATRICULA',
  `sit_parc` VARCHAR(20) NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_TB_PARCELA_TB_CONTRATO_IDX` (`contrato_id` ASC) ,
  CONSTRAINT `FK_TB_PARCELA_TB_CONTRATO`
    FOREIGN KEY (`contrato_id`)
    REFERENCES `db_curso`.`TB_CONTRATO` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

ALTER TABLE TB_UNIDADE AUTO_INCREMENT = 1;
ALTER TABLE TB_TURMA AUTO_INCREMENT = 1;
ALTER TABLE TB_ALUNO AUTO_INCREMENT = 1;
ALTER TABLE TB_CONTRATO AUTO_INCREMENT = 1;
ALTER TABLE TB_PARCELA AUTO_INCREMENT = 1;